# Generated by Django 5.0.3 on 2024-04-15 13:36

import User.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bag',
            fields=[
                ('bag_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('sapphires', models.PositiveBigIntegerField(default=0)),
            ],
            options={
                'db_table': 'Bags',
            },
        ),
        migrations.CreateModel(
            name='BagItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('bag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.bag')),
            ],
            options={
                'db_table': 'BagItems',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('item_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('item_name', models.CharField(max_length=20)),
                ('item_image', models.ImageField(max_length=255, upload_to='')),
                ('price', models.BigIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('bag', models.ManyToManyField(blank=True, through='User.BagItem', to='User.bag')),
            ],
            options={
                'db_table': 'Items',
            },
        ),
        migrations.AddField(
            model_name='bagitem',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.item'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.CharField(editable=False, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True, unique=True)),
                ('last_name', models.CharField(max_length=100)),
                ('first_name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=255)),
                ('view_timeline_permission', models.IntegerField(choices=[(0, 'Public'), (1, 'Follower'), (2, 'Fan'), (3, 'Fiend'), (4, 'Private')], default=0)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/%Y/%m')),
                ('background', models.ImageField(blank=True, null=True, upload_to='')),
                ('day_of_birth', models.DateField(blank=True, null=True)),
                ('age', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('gender', models.IntegerField(choices=[(0, 'Male'), (1, 'Female'), (2, 'Other')], default=0)),
                ('story', models.CharField(blank=True, max_length=50, null=True)),
                ('relationship', models.IntegerField(choices=[(0, 'Single'), (1, 'Dating'), (2, 'Married')], default=0)),
                ('hometown', models.CharField(blank=True, max_length=255, null=True)),
                ('school', models.CharField(blank=True, max_length=100, null=True)),
                ('hobby', models.CharField(blank=True, max_length=100, null=True)),
                ('friends', models.TextField(blank=True, default='', null=True)),
                ('friend_quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('follows', models.TextField(blank=True, default='', null=True)),
                ('follow_quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('followers', models.TextField(blank=True, default='', null=True)),
                ('follower_quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('idols', models.TextField(blank=True, default='', null=True)),
                ('idol_quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('fans', models.TextField(blank=True, default='', null=True)),
                ('fan_quantity', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('businessmen_rank', models.IntegerField(choices=[(0, 'None'), (1, 'Startup'), (2, 'Small trader'), (3, 'Silver'), (4, 'Gold'), (5, 'Platinum'), (6, 'Tycoon')], default=0)),
                ('popularity_rank', models.IntegerField(choices=[(0, 'None'), (1, 'Favorite person'), (2, 'Idol'), (3, 'Public figure'), (4, 'Celebrity'), (5, 'D-list star'), (6, 'C-list star'), (7, 'B-list star'), (8, 'A-list star'), (9, 'S-list star')], default=0)),
                ('artist_rank', models.IntegerField(choices=[(0, 'None'), (1, 'Artist'), (2, 'Outstanding artist'), (3, "People's Artist")], default=0)),
                ('aristocrat_rank', models.IntegerField(choices=[(0, 'Layman'), (1, 'Baron'), (2, 'Viscount'), (3, 'Earl'), (4, 'Marquess'), (5, 'Duke'), (6, 'King')], default=0)),
                ('is_abaddoner', models.BooleanField(default=False)),
                ('is_universeExplorer', models.BooleanField(default=False)),
                ('is_globeTrotter', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_manager', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'Users',
            },
            managers=[
                ('objects', User.models.CustomUserManager()),
            ],
        ),
        migrations.AddField(
            model_name='bag',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
